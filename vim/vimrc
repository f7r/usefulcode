set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-syntastic/syntastic'
Plugin 'powerline/powerline'
Plugin 'Valloric/YouCompleteMe'

call vundle#end()
filetype plugin on

syntax on
set encoding=utf-8
set fileformat=unix
set pastetoggle=<F10>
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim
set laststatus=2
set showmatch

" Enable folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

autocmd BufRead,BufNewFile *.py set tabstop=4
autocmd BufRead,BufNewFile *.py set softtabstop=4
autocmd BufRead,BufNewFile *.py set expandtab
autocmd BufRead,BufNewFile *.py set shiftwidth=4
autocmd BufRead,BufNewFile *.py set autoindent

highlight BadWhitespace ctermbg=red
autocmd BufRead,BufNewFile *.py,*.yaml match BadWhitespace /^\t\+/
autocmd BufRead,BufNewFile *.py,*.yaml,*.ini match BadWhitespace /\s\+$/

" Plugin setting.
let python_highlight_all=1
let g:SimpylFold_docstring_preview = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_seed_identifiers_with_syntax = 1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
"let g:syntastic_loc_list_height = 5
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
"let g:syntastic_auto_jump = 2
let g:syntastic_error_symbol = "\u2718"
let g:syntastic_style_error_symbol = "\u2717"
let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "active_filetypes": ["python", "yaml"],
    \ "passive_filetypes": [] }

function! SyntasticCheckHook(errors)
  if !empty(a:errors)
    let g:syntastic_loc_list_height = min([len(a:errors), 5])
  endif
endfunction

function! <SID>LocationPrevious()
  try
    lprev
  catch /^Vim\%((\a\+)\)\=:E553/
    llast
  endtry
endfunction
function! <SID>LocationNext()                           
  try
    lnext
  catch /^Vim\%((\a\+)\)\=:E553/
    lfirst
  endtry
endfunction
nnoremap <silent> <Plug>LocationPrevious    :<C-u>exe 'call <SID>LocationPrevious()'<CR>
nnoremap <silent> <Plug>LocationNext        :<C-u>exe 'call <SID>LocationNext()'<CR>
nmap <silent> <leader>p  <Plug>LocationPrevious
nmap <silent> <leader>n  <Plug>LocationNext

nnoremap <leader>j :YcmCompleter GoTo<CR>

map <F5> :call RunPython()<CR>
function! RunPython()
    exec "W"
    if &filetype == 'python'
        exec "!time python3 %"
    endif
endfunction
